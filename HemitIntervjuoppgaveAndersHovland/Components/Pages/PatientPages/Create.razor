@page "/patients/create"
@using Microsoft.EntityFrameworkCore
@using HemitIntervjuoppgaveAndersHovland.Data
@inject IDbContextFactory<HemitIntervjuoppgaveAndersHovland.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Patient</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Patient" OnValidSubmit="AddPatient" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label>
                <InputText id="name" @bind-Value="Patient.Name" class="form-control" />
                <ValidationMessage For="() => Patient.Name" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="dateofbirth" class="form-label">DateOfBirth:</label>
                <InputDate id="dateofbirth" @bind-Value="Patient.DateOfBirth" class="form-control" />
                <ValidationMessage For="() => Patient.DateOfBirth" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="name" class="form-label">Conditions:</label>
                <InputTextArea id="conditions" @bind-Value="Patient.Conditions" class="form-control" />
                <ValidationMessage For="() => Patient.Conditions" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/patients">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Patient Patient { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPatient()
    {
        await using var context = await DbFactory.CreateDbContextAsync();
        context.Patients.Add(Patient);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/patients");
    }
}

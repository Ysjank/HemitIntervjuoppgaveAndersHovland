@page "/patients/details"
@using Microsoft.EntityFrameworkCore
@using HemitIntervjuoppgaveAndersHovland.Data
@inject IDbContextFactory<HemitIntervjuoppgaveAndersHovland.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Patient</h2>
    <hr />
    @if (patient is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@patient.Name</dd>
            <dt class="col-sm-2">DateOfBirth</dt>
            <dd class="col-sm-10">@patient.DateOfBirth</dd>
            <dt class="col-sm-2">Conditions</dt>
            <dd class="col-sm-10">@patient.Conditions</dd>
        </dl>
        <div>
            <a href="@($"/patients/edit?id={patient.Id}")">Edit</a> |
            <a href="@($"/patients")">Back to List</a>
        </div>
    }
</div>

@code {
    private Patient? patient;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        patient = await context.Patients.FirstOrDefaultAsync(m => m.Id == Id);

        if (patient is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
